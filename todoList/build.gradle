plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'todoList'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'junit:junit:4.13.1'
    //롬복
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //테스트에서 lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    //H2 데이터베이스 추가
    runtimeOnly 'com.h2database:h2'
    //테스트 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //mysql
    implementation 'mysql:mysql-connector-java:8.0.28'
    //asciidoctor
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

build.doFirst {
    file(querydslDir).deleteDir()
}


sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
//querydsl 추가 끝

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task createDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc/")
    into file("src/main/resources/static")
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn createDocument
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}